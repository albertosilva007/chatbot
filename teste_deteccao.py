#!/usr/bin/env python3
"""
Teste isolado da detec√ß√£o de sintomas cr√≠ticos
"""

import re
import sys
from pathlib import Path

def detectar_sintomas_criticos_corrigido(texto: str) -> bool:
    """Vers√£o corrigida da detec√ß√£o"""
    texto_lower = texto.lower()
    
    padroes_criticos = [
        r"pensando em suic√≠dio",
        r"pensando em suicidio", 
        r"quero (me )?matar",
        r"vou (me )?suicidar",
        r"quero morrer",
        r"n√£o aguento mais",
        r"nao aguento mais",
        r"n√£o suporto mais",
        r"cansei de viver",
        r"vou acabar com tudo",
        r"tentei me matar",
        r"escuto vozes",
        r"ou√ßo vozes",
        r"vejo coisas",
        r"\bsuic√≠dio\b",
        r"\bsuicidio\b",
    ]
    
    for padrao in padroes_criticos:
        if re.search(padrao, texto_lower):
            print(f"üö® DETECTADO: '{padrao}' em '{texto}'")
            return True
    
    return False

def teste_completo():
    """Teste completo"""
    print("üß™ TESTE DE DETEC√á√ÉO DE SINTOMAS CR√çTICOS")
    print("=" * 50)
    
    frases_teste = [
        "Estou pensando em suic√≠dio",
        "Estou pensando em suicidio", 
        "N√£o aguento mais",
        "Quero morrer",
        "Quero me matar",
        "Vou me suicidar",
        "Ol√°, como vai?",  # Esta N√ÉO deve detectar
        "Estou triste",    # Esta N√ÉO deve detectar
    ]
    
    print("üîç TESTANDO FRASES:")
    print("-" * 30)
    
    for frase in frases_teste:
        detectado = detectar_sintomas_criticos_corrigido(frase)
        status = "üö® CR√çTICO" if detectado else "‚úÖ Normal"
        print(f"{status}: '{frase}'")
    
    print("\n" + "=" * 50)
    
    # Teste espec√≠fico da frase problema
    frase_problema = "Estou pensando em suic√≠dio"
    detectado = detectar_sintomas_criticos_corrigido(frase_problema)
    
    if detectado:
        print(f"‚úÖ CORRE√á√ÉO FUNCIONOU!")
        print(f"‚úÖ '{frase_problema}' foi detectado como cr√≠tico")
        print("üîß Agora aplique esta corre√ß√£o no arquivo chatbot.py")
    else:
        print(f"‚ùå AINDA N√ÉO FUNCIONA!")
        print(f"‚ùå '{frase_problema}' N√ÉO foi detectado")
        print("üîß Verifique os padr√µes regex")

def verificar_arquivo_atual():
    """Verificar se arquivo foi corrigido"""
    print("\nüîç VERIFICANDO ARQUIVO ATUAL:")
    print("-" * 30)
    
    try:
        with open("src/chatbot.py", 'r', encoding='utf-8') as f:
            conteudo = f.read()
        
        if 'pensando em suic√≠dio' in conteudo:
            print("‚úÖ Arquivo cont√©m 'pensando em suic√≠dio'")
            print("‚úÖ Corre√ß√£o aplicada!")
        else:
            print("‚ùå Arquivo N√ÉO cont√©m 'pensando em suic√≠dio'")
            print("‚ùå Corre√ß√£o N√ÉO foi aplicada!")
            print("\nüîß APLIQUE A CORRE√á√ÉO MANUALMENTE:")
            print("1. notepad src\\chatbot.py")
            print("2. Buscar: def detectar_sintomas_criticos")
            print("3. Substituir toda a fun√ß√£o")
        
        # Verificar se fun√ß√£o existe
        if 'def detectar_sintomas_criticos' in conteudo:
            print("‚úÖ Fun√ß√£o detectar_sintomas_criticos encontrada")
        else:
            print("‚ùå Fun√ß√£o detectar_sintomas_criticos N√ÉO encontrada!")
    
    except Exception as e:
        print(f"‚ùå Erro ao ler arquivo: {e}")

if __name__ == "__main__":
    teste_completo()
    verificar_arquivo_atual()
    
    print("\nüö® URGENTE:")
    print("Se 'pensando em suic√≠dio' n√£o foi detectado,")
    print("EDITE MANUALMENTE o arquivo src/chatbot.py!")
    print("\nüì± Depois teste novamente: python main.py")